version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: deposito_urbano_db
    environment:
      POSTGRES_USER: ${DB_USER:-deposito_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-deposito_password}
      POSTGRES_DB: ${DB_NAME:-deposito_urbano}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - deposito_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-deposito_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: deposito_urbano_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-deposito_urbano}
      DB_USER: ${DB_USER:-deposito_user}
      DB_PASSWORD: ${DB_PASSWORD:-deposito_password}
      JWT_SECRET: ${JWT_SECRET}
      MERCADOPAGO_ACCESS_TOKEN: ${MERCADOPAGO_ACCESS_TOKEN}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - deposito_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: deposito_urbano_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - deposito_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  deposito_network:
    driver: bridge